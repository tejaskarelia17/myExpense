[{"/Users/tkarelia/Desktop/myexpense/client/src/index.js":"1","/Users/tkarelia/Desktop/myexpense/client/src/serviceWorker.js":"2","/Users/tkarelia/Desktop/myexpense/client/src/App.js":"3","/Users/tkarelia/Desktop/myexpense/client/src/app/store.js":"4","/Users/tkarelia/Desktop/myexpense/client/src/components/login/Login.js":"5","/Users/tkarelia/Desktop/myexpense/client/src/components/register/register.js":"6","/Users/tkarelia/Desktop/myexpense/client/src/components/register/Register.js":"7","/Users/tkarelia/Desktop/myexpense/client/src/components/sidebar/Sidebar.js":"8","/Users/tkarelia/Desktop/myexpense/client/src/components/body/Body.js":"9","/Users/tkarelia/Desktop/myexpense/client/src/components/main/Main.js":"10","/Users/tkarelia/Desktop/myexpense/client/src/components/widgets/topWidget/TopWidget.js":"11","/Users/tkarelia/Desktop/myexpense/client/src/components/graphs/BarGraph.js":"12","/Users/tkarelia/Desktop/myexpense/client/src/components/graphs/DonutGraph.js":"13","/Users/tkarelia/Desktop/myexpense/client/src/components/tables/Tables.js":"14","/Users/tkarelia/Desktop/myexpense/client/src/components/header/Header.js":"15","/Users/tkarelia/Desktop/myexpense/client/src/components/group/Group.js":"16","/Users/tkarelia/Desktop/myexpense/client/src/components/transaction/Transaction.js":"17","/Users/tkarelia/Desktop/myexpense/client/src/components/recycle/Recycle.js":"18","/Users/tkarelia/Desktop/myexpense/client/src/components/addTransaction/AddTransaction.js":"19","/Users/tkarelia/Desktop/myexpense/client/src/features/auth/authSlice.js":"20","/Users/tkarelia/Desktop/myexpense/client/src/AuthService.js":"21","/Users/tkarelia/Desktop/myexpense/client/src/GroupService.js":"22","/Users/tkarelia/Desktop/myexpense/client/src/features/transaction/transactionSlice.js":"23","/Users/tkarelia/Desktop/myexpense/client/src/TransactionService.js":"24","/Users/tkarelia/Desktop/myexpense/client/src/DashboardService.js":"25","/Users/tkarelia/Desktop/myexpense/client/src/components/widgets/topWidget/TopWidgetExpense.js":"26"},{"size":668,"mtime":1611272166115,"results":"27","hashOfConfig":"28"},{"size":5141,"mtime":1611106669747,"results":"29","hashOfConfig":"28"},{"size":1620,"mtime":1611692073104,"results":"30","hashOfConfig":"28"},{"size":299,"mtime":1611699392706,"results":"31","hashOfConfig":"28"},{"size":2665,"mtime":1611689221165,"results":"32","hashOfConfig":"28"},{"size":107,"mtime":1611264958282,"results":"33","hashOfConfig":"28"},{"size":3714,"mtime":1611692794527,"results":"34","hashOfConfig":"28"},{"size":2275,"mtime":1611814117888,"results":"35","hashOfConfig":"28"},{"size":462,"mtime":1611285690108,"results":"36","hashOfConfig":"28"},{"size":2752,"mtime":1611875428508,"results":"37","hashOfConfig":"28"},{"size":1216,"mtime":1611819605749,"results":"38","hashOfConfig":"28"},{"size":3401,"mtime":1611952235232,"results":"39","hashOfConfig":"28"},{"size":1598,"mtime":1611947056949,"results":"40","hashOfConfig":"28"},{"size":1892,"mtime":1611793842209,"results":"41","hashOfConfig":"28"},{"size":3606,"mtime":1611814397466,"results":"42","hashOfConfig":"28"},{"size":4296,"mtime":1611708935865,"results":"43","hashOfConfig":"28"},{"size":3558,"mtime":1611820959634,"results":"44","hashOfConfig":"28"},{"size":3725,"mtime":1611787262458,"results":"45","hashOfConfig":"28"},{"size":6308,"mtime":1611878105470,"results":"46","hashOfConfig":"28"},{"size":780,"mtime":1611691405668,"results":"47","hashOfConfig":"28"},{"size":966,"mtime":1611695890275,"results":"48","hashOfConfig":"28"},{"size":700,"mtime":1611703391907,"results":"49","hashOfConfig":"28"},{"size":1323,"mtime":1611878033981,"results":"50","hashOfConfig":"28"},{"size":1859,"mtime":1611787902040,"results":"51","hashOfConfig":"28"},{"size":1452,"mtime":1611951906330,"results":"52","hashOfConfig":"28"},{"size":887,"mtime":1611875217962,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1mqn7s7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"56"},"/Users/tkarelia/Desktop/myexpense/client/src/index.js",[],["123","124"],"/Users/tkarelia/Desktop/myexpense/client/src/serviceWorker.js",[],"/Users/tkarelia/Desktop/myexpense/client/src/App.js",["125","126"],"import React, { useEffect } from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tRedirect,\r\n} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectIsAuthenticated } from './features/auth/authSlice';\r\n\r\n//Import Components\r\nimport Login from './components/login/Login';\r\nimport Register from './components/register/Register';\r\nimport Body from './components/body/Body';\r\nimport Group from './components/group/Group';\r\nimport Transaction from './components/transaction/Transaction';\r\nimport AddTransaction from './components/addTransaction/AddTransaction';\r\nimport Recycle from './components/recycle/Recycle';\r\n\r\n//Import Static Assets\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst isAuthenticated = useSelector(selectIsAuthenticated);\r\n\tconst unauthenticatedPage = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Redirect to='/' />\r\n\t\t\t\t<Route exact path='/' component={Login} />\r\n\t\t\t\t<Route exact path='/register' component={Register} />\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\tconst authenticatedPage = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Route exact path='/group' component={Group} />\r\n\t\t\t\t<Route exact path='/transaction'>\r\n\t\t\t\t\t<Transaction />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path='/recycle'>\r\n\t\t\t\t\t<Recycle />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path='/addtransaction'>\r\n\t\t\t\t\t<AddTransaction />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t<Body />\r\n\t\t\t\t</Route>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{isAuthenticated ? authenticatedPage() : unauthenticatedPage()}\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","/Users/tkarelia/Desktop/myexpense/client/src/app/store.js",[],"/Users/tkarelia/Desktop/myexpense/client/src/components/login/Login.js",["127","128"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from './../../features/auth/authSlice';\nimport AuthService from './../../AuthService';\n\n//Import Static Assets\nimport './Login.css';\nimport logo from './../../static/img/myExpenseFull.png';\n\nconst Login = (props) => {\n\tconst dispatch = useDispatch();\n\tconst [loginUser, setLoginUser] = useState({ username: '', password: '' });\n\tconst [message, setMessage] = useState('');\n\tconst onChangeHandler = (e) => {\n\t\tsetLoginUser({ ...loginUser, [e.target.name]: e.target.value });\n\t};\n\tconst formSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tAuthService.login(loginUser).then((data) => {\n\t\t\tconst { isAuthenticated, user, message } = data;\n\t\t\tif (isAuthenticated) {\n\t\t\t\tdispatch(\n\t\t\t\t\tlogin({\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\tisAuthenticated,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\t// props.history.push('/');\n\t\t\t} else {\n\t\t\t\tconsole.log(message);\n\t\t\t\tsetMessage(message);\n\t\t\t}\n\t\t});\n\t};\n\treturn (\n\t\t<div className='container-scroller'>\n\t\t\t<div className='container-fluid page-body-wrapper full-page-wrapper'>\n\t\t\t\t<div className='content-wrapper d-flex align-items-center auth'>\n\t\t\t\t\t<div className='row flex-grow'>\n\t\t\t\t\t\t<div className='col-lg-4 mx-auto'>\n\t\t\t\t\t\t\t<div className='auth-form-light text-left p-5'>\n\t\t\t\t\t\t\t\t<div className='brand-logo'>\n\t\t\t\t\t\t\t\t\t<img src={logo} alt='logo' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h4>Hello! let's get started</h4>\n\t\t\t\t\t\t\t\t<h6 className='font-weight-light'>Sign in to continue.</h6>\n\t\t\t\t\t\t\t\t<form onSubmit={formSubmitHandler} className='pt-3'>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='mt-3'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn'\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'>\n\t\t\t\t\t\t\t\t\t\t\tSIGN IN\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className='text-center mt-4 font-weight-light'>\n\t\t\t\t\t\t\t\t\t\tDon't have an account?&nbsp;\n\t\t\t\t\t\t\t\t\t\t<Link to='/register' className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/register/register.js",["129"],"/Users/tkarelia/Desktop/myexpense/client/src/components/register/Register.js",["130","131","132","133"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { register } from './../../features/auth/authSlice';\nimport AuthService from './../../AuthService';\n\n//Import Static Assets\nimport './Register.css';\nimport logo from './../../static/img/myExpenseFull.png';\n\nconst Register = (props) => {\n\tconst [registerUser, setRegisterUser] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t\tc_password: '',\n\t\tname: '',\n\t\temail: '',\n\t});\n\tlet timerID = useRef(null);\n\tconst [message, setMessage] = useState('');\n\tconst onChangeHandler = (e) => {\n\t\tsetRegisterUser({ ...registerUser, [e.target.name]: e.target.value });\n\t};\n\tconst formSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tAuthService.register(registerUser).then((data) => {\n\t\t\tconst { message } = data;\n\t\t\tsetMessage(message);\n\t\t\tif (!message.messageError) {\n\t\t\t\tresetForm();\n\t\t\t\ttimerID = setTimeout(() => {\n\t\t\t\t\tprops.history.push('/');\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tclearTimeout(timerID);\n\t\t};\n\t}, []);\n\n\tconst resetForm = () => {\n\t\tsetRegisterUser({\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tc_password: '',\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t});\n\t};\n\treturn (\n\t\t<div className='container-scroller'>\n\t\t\t<div className='container-fluid page-body-wrapper full-page-wrapper'>\n\t\t\t\t<div className='content-wrapper d-flex align-items-center auth'>\n\t\t\t\t\t<div className='row flex-grow'>\n\t\t\t\t\t\t<div className='col-lg-4 mx-auto'>\n\t\t\t\t\t\t\t<div className='auth-form-light text-left p-5'>\n\t\t\t\t\t\t\t\t<div className='brand-logo'>\n\t\t\t\t\t\t\t\t\t<img src={logo} alt='logo' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h4>Hello! let's get you registered</h4>\n\t\t\t\t\t\t\t\t<h6 className='font-weight-light'>\n\t\t\t\t\t\t\t\t\tPlease fill in all the fields\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<form onSubmit={formSubmitHandler} className='pt-3'>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\tname='c_password'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='mt-3'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn'\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'>\n\t\t\t\t\t\t\t\t\t\t\tREGISTER\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className='text-center mt-4 font-weight-light'>\n\t\t\t\t\t\t\t\t\t\tAlready have an account?&nbsp;\n\t\t\t\t\t\t\t\t\t\t<Link to='/' className='text-primary'>\n\t\t\t\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Register;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/sidebar/Sidebar.js",["134","135","136"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Icon from '@mdi/react';\nimport { mdiHome } from '@mdi/js';\nimport { mdiClipboardMultiple } from '@mdi/js';\nimport { mdiDelete } from '@mdi/js';\nimport { mdiLogout } from '@mdi/js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tlogout,\n\tselectUser,\n\tselectIsAuthenticated,\n} from './../../features/auth/authSlice';\nimport AuthService from './../../AuthService';\n\nfunction Sidebar() {\n\tconst dispatch = useDispatch();\n\tconst logoutHandler = () => {\n\t\tAuthService.logout().then((data) => {\n\t\t\tif (data.success) {\n\t\t\t\tdispatch(logout());\n\t\t\t}\n\t\t});\n\t};\n\treturn (\n\t\t<nav class='sidebar sidebar-offcanvas' id='sidebarIcons'>\n\t\t\t<ul class='nav'>\n\t\t\t\t<li class='nav-item nav__firstIcon '>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclass='nav-link'\n\t\t\t\t\t\tdata-toggle='collapse'\n\t\t\t\t\t\tto='/'\n\t\t\t\t\t\taria-expanded='false'\n\t\t\t\t\t\taria-controls='ui-basic'>\n\t\t\t\t\t\t<span class='menu-title'>Dashboard</span>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tpath={mdiHome}\n\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\ttitle='Dashboard'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclass='nav-link'\n\t\t\t\t\t\tdata-toggle='collapse'\n\t\t\t\t\t\tto='/group'\n\t\t\t\t\t\taria-expanded='false'\n\t\t\t\t\t\taria-controls='ui-basic'>\n\t\t\t\t\t\t<span class='menu-title'>Groups</span>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tpath={mdiClipboardMultiple}\n\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\ttitle='Groups'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t<Link class='nav-link' to='/recycle'>\n\t\t\t\t\t\t<span class='menu-title'>Trash</span>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tpath={mdiDelete}\n\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\ttitle='Recycle bin'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t<Link class='nav-link' onClick={logoutHandler}>\n\t\t\t\t\t\t<span class='menu-title'>Logout</span>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tpath={mdiLogout}\n\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\ttitle='Logout'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\n\t\t\t\t<li class='nav-item sidebar-actions'>\n\t\t\t\t\t<span class='nav-link'>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto='/addtransaction'\n\t\t\t\t\t\t\tclass='btn btn-block btn-lg btn-gradient-primary mt-4'>\n\t\t\t\t\t\t\t+ Add a Bill\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n}\n\nexport default Sidebar;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/body/Body.js",[],"/Users/tkarelia/Desktop/myexpense/client/src/components/main/Main.js",["137","138"],"import React, { useState, useEffect } from 'react';\nimport DashboardService from './../../DashboardService';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './../../features/auth/authSlice';\nimport Icon from '@mdi/react';\nimport { mdiHome } from '@mdi/js';\nimport { mdiChartLine } from '@mdi/js';\n\n//Import Components\nimport TopWidget from './../widgets/topWidget/TopWidget';\nimport TopWidgetExpense from './../widgets/topWidget/TopWidgetExpense';\nimport BarGraph from './../graphs/BarGraph';\nimport DonutGraph from './../graphs/DonutGraph';\nimport Tables from './../tables/Tables';\n\n//Import Static Assets\n\nfunction Main() {\n\tconst user = useSelector(selectUser);\n\tconst [weeklyExpense, setNewWeeklyExpense] = useState('');\n\tconst [expensiveGroup, setExpensiveGroup] = useState('');\n\tconst [totalExpense, setTotalExpense] = useState('');\n\tconst [cardClass, setCardClass] = useState('');\n\tuseEffect(() => {\n\t\tDashboardService.weeklyExpense(user._id).then((data) => {\n\t\t\tsetNewWeeklyExpense(data[0]?.TotalAmount);\n\t\t});\n\t\tDashboardService.expensiveGroup(user._id).then((data) => {\n\t\t\tsetExpensiveGroup(data[0]);\n\t\t});\n\t\tDashboardService.totalExpense(user._id).then((data) => {\n\t\t\tsetTotalExpense(data[0]?.TotalAmount);\n\t\t});\n\t\t{\n\t\t\ttotalExpense < user.setBudget\n\t\t\t\t? setCardClass('card bg-gradient-red card-img-holder text-white')\n\t\t\t\t: setCardClass('card bg-gradient-success card-img-holder text-white');\n\t\t}\n\t}, [user]);\n\treturn (\n\t\t<div class='content-wrapper'>\n\t\t\t<div class='page-header'>\n\t\t\t\t<h3 class='page-title center__title'>\n\t\t\t\t\t<span class='page-title-icon bg-gradient-primary text-white mr-2'>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tclassName='title__icon'\n\t\t\t\t\t\t\tpath={mdiHome}\n\t\t\t\t\t\t\ttitle='Dashboard'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\tDashboard\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div class='row'>\n\t\t\t\t<div class='col-md-4 stretch-card grid-margin'>\n\t\t\t\t\t<TopWidget\n\t\t\t\t\t\ttitle='Weekly Expense'\n\t\t\t\t\t\tvalue={weeklyExpense}\n\t\t\t\t\t\ticon={mdiChartLine}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class='col-md-4 stretch-card grid-margin'>\n\t\t\t\t\t<TopWidget\n\t\t\t\t\t\ttitle='Most Expensive Group'\n\t\t\t\t\t\tvalue={expensiveGroup.TotalAmount}\n\t\t\t\t\t\tsubValue={expensiveGroup._id}\n\t\t\t\t\t\ticon={mdiChartLine}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class='col-md-4 stretch-card grid-margin'>\n\t\t\t\t\t<TopWidgetExpense\n\t\t\t\t\t\ttitle='Total Expense'\n\t\t\t\t\t\tvalue={totalExpense}\n\t\t\t\t\t\ticon={mdiChartLine}\n\t\t\t\t\t\tcardClass={cardClass}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class='row'>\n\t\t\t\t<div class='col-md-7 grid-margin stretch-card'>\n\t\t\t\t\t<BarGraph />\n\t\t\t\t</div>\n\t\t\t\t<div class='col-md-5 grid-margin stretch-card'>\n\t\t\t\t\t<DonutGraph />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class='row'>\n\t\t\t\t<div class='col-12 grid-margin'>\n\t\t\t\t\t<Tables />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Main;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/widgets/topWidget/TopWidget.js",["139","140"],"import React from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport Icon from '@mdi/react';\nimport { mdiChartLine } from '@mdi/js';\n\n//Import Static Assets\nimport circleImg from './../../../static/img/circle.svg';\n\nfunction TopWidget({ title, value, icon, subValue }) {\n\treturn (\n\t\t<div class='card bg-gradient-danger card-img-holder text-white'>\n\t\t\t<div class='card-body'>\n\t\t\t\t<img src={circleImg} class='card-img-absolute' alt='circle-image' />\n\t\t\t\t<h4 class='font-weight-normal mb-3'>\n\t\t\t\t\t{title}\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tclassName='title__icon float-right'\n\t\t\t\t\t\tpath={icon}\n\t\t\t\t\t\ttitle='Chart'\n\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t/>\n\t\t\t\t</h4>\n\t\t\t\t{subValue ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h2 class='mb-5'>{subValue}</h2>\n\t\t\t\t\t\t<CurrencyFormat\n\t\t\t\t\t\t\trenderText={(value) => <h6 class='card-text'>{value} </h6>}\n\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tdisplayType='text'\n\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\tprefix={'$'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<CurrencyFormat\n\t\t\t\t\t\trenderText={(value) => <h2 class='mb-5'>{value}</h2>}\n\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tdisplayType='text'\n\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\tprefix={'$'}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TopWidget;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/graphs/BarGraph.js",["141","142"],"/Users/tkarelia/Desktop/myexpense/client/src/components/graphs/DonutGraph.js",["143","144"],"/Users/tkarelia/Desktop/myexpense/client/src/components/tables/Tables.js",["145"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport CurrencyFormat from 'react-currency-format';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { selectUser } from './../../features/auth/authSlice';\nimport TransactionService from './../../TransactionService';\nimport {\n\tselectRecentTransactions,\n\tupdateRecentTransactions,\n} from './../../features/transaction/transactionSlice';\n\nfunction Tables() {\n\tconst dispatch = useDispatch();\n\tconst user = useSelector(selectUser);\n\tconst transaction = useSelector(selectRecentTransactions);\n\n\tuseEffect(() => {\n\t\tTransactionService.listRecentTransactions(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateRecentTransactions({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}, [transaction]);\n\treturn (\n\t\t<div class='card'>\n\t\t\t<div class='card-body'>\n\t\t\t\t<h4 class='card-title'>Recent Transactions</h4>\n\t\t\t\t<div class='table-responsive'>\n\t\t\t\t\t<table class='table'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th> Name </th>\n\t\t\t\t\t\t\t\t<th> Description </th>\n\t\t\t\t\t\t\t\t<th> Group </th>\n\t\t\t\t\t\t\t\t<th> Amount </th>\n\t\t\t\t\t\t\t\t<th> Date </th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{transaction?.map((entry, _i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={_i}>\n\t\t\t\t\t\t\t\t\t\t<td>{entry?.name}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{entry?.description}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{entry?.group}</td>\n\t\t\t\t\t\t\t\t\t\t<CurrencyFormat\n\t\t\t\t\t\t\t\t\t\t\trenderText={(value) => <td>{value}</td>}\n\t\t\t\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\t\t\t\tvalue={entry?.amount}\n\t\t\t\t\t\t\t\t\t\t\tdisplayType='text'\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\t\t\t\tprefix={'$'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<td>{moment(entry?.date).format('D MMM YYYY')}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<Link className='bottomLinkHomePage' to='/transaction'>\n\t\t\t\t\t\tCheck all transactions\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Tables;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/header/Header.js",["146","147","148"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Icon from '@mdi/react';\nimport { mdiPower } from '@mdi/js';\nimport { mdiMenu } from '@mdi/js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tlogout,\n\tselectUser,\n\tselectIsAuthenticated,\n} from './../../features/auth/authSlice';\nimport AuthService from './../../AuthService';\n\n//Import Static Assets\nimport faceImg from '../../static/img/face1.jpg';\nimport logoIcon from './../../static/img/myExpense.png';\nimport logo from './../../static/img/myExpenseFull.png';\n\nfunction Header() {\n\tconst dispatch = useDispatch();\n\tconst [desktopIcon, setDesktopIcon] = useState('');\n\tconst [mobileIcon, setMobileIcon] = useState('sidebar sidebar-offcanvas');\n\tconst user = useSelector(selectUser);\n\tconst logoutHandler = () => {\n\t\tAuthService.logout().then((data) => {\n\t\t\tif (data.success) {\n\t\t\t\tdispatch(logout());\n\t\t\t}\n\t\t});\n\t};\n\tconst desktopIconOnly = () => {\n\t\t{\n\t\t\tdesktopIcon === ''\n\t\t\t\t? setDesktopIcon('sidebar-icon-only')\n\t\t\t\t: setDesktopIcon('');\n\t\t}\n\t\tdocument.body.className = desktopIcon;\n\t};\n\tconst mobileSidebar = () => {\n\t\t{\n\t\t\tmobileIcon === 'sidebar sidebar-offcanvas'\n\t\t\t\t? setMobileIcon('sidebar sidebar-offcanvas active')\n\t\t\t\t: setMobileIcon('sidebar sidebar-offcanvas');\n\t\t}\n\t\tdocument.getElementById('sidebarIcons').className = mobileIcon;\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<div className='navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row'>\n\t\t\t\t<div className='text-center navbar-brand-wrapper d-flex align-items-center justify-content-center'>\n\t\t\t\t\t<Link className='navbar-brand brand-logo' to='/'>\n\t\t\t\t\t\t<img className='header__logo' src={logo} alt='logo' />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className='navbar-brand brand-logo-mini' to='/'>\n\t\t\t\t\t\t<img className='header__logo' src={logoIcon} alt='logo' />\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className='navbar-menu-wrapper d-flex align-items-stretch'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='navbar-toggler navbar-toggler align-self-center'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tdata-toggle='minimize'>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tpath={mdiMenu}\n\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\tonClick={desktopIconOnly}\n\t\t\t\t\t\t\ttitle='Menu'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t\t<ul className='navbar-nav navbar-nav-right'>\n\t\t\t\t\t\t<li className='nav-item nav-profile dropdown'>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tclassName='nav-link'\n\t\t\t\t\t\t\t\tid='profileDropdown'\n\t\t\t\t\t\t\t\thref='#'\n\t\t\t\t\t\t\t\taria-expanded='false'>\n\t\t\t\t\t\t\t\t<div className='nav-profile-img'>\n\t\t\t\t\t\t\t\t\t<img src={faceImg} alt='users profile' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='nav-profile-text'>\n\t\t\t\t\t\t\t\t\t<p className='mb-1 text-black'>{user.name}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li className='nav-item nav-logout d-block'>\n\t\t\t\t\t\t\t<Link onClick={logoutHandler} className='nav-link' href='#'>\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\tpath={mdiPower}\n\t\t\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\t\t\ttitle='Dashboard'\n\t\t\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item nav-settings d-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' href='#'>\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\tpath={mdiMenu}\n\t\t\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\t\t\ttitle='Menu'\n\t\t\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='navbar-toggler navbar-toggler-right d-lg-none align-self-center'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tdata-toggle='offcanvas'>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tpath={mdiMenu}\n\t\t\t\t\t\t\tclassName='sidebar__icons'\n\t\t\t\t\t\t\ttitle='Dashboard'\n\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\tonClick={mobileSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/group/Group.js",["149","150"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { selectUser } from './../../features/auth/authSlice';\nimport GroupService from './../../GroupService';\nimport {\n\tupdateGroups,\n\tselectGroups,\n} from './../../features/transaction/transactionSlice';\n\n//Import Components\nimport Header from './../header/Header';\nimport Sidebar from './../sidebar/Sidebar';\nimport Icon from '@mdi/react';\nimport { mdiClipboardMultiple } from '@mdi/js';\n\nfunction Group() {\n\tconst user = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\tconst groups = useSelector(selectGroups);\n\tconst [message, setMessage] = useState('');\n\tconst [newGroup, setNewGroup] = useState({ user_id: user._id });\n\n\tconst onChangeHandler = (e) => {\n\t\tsetNewGroup({ ...newGroup, [e.target.name]: e.target.value });\n\t};\n\n\tconst formSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tGroupService.addGroup(newGroup).then((data) => {\n\t\t\tconst { message } = data;\n\t\t\tsetMessage(message);\n\t\t\tresetForm();\n\t\t});\n\t};\n\tconst resetForm = () => {\n\t\tsetNewGroup({\n\t\t\tname: '',\n\t\t\tdescription: '',\n\t\t});\n\t\tdocument.getElementById('addGroupForm').reset();\n\t};\n\tuseEffect(() => {\n\t\tGroupService.listIndividualGroups(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateGroups({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}, [groups]);\n\n\treturn (\n\t\t<div class='container-scroller'>\n\t\t\t<Header />\n\t\t\t<div class='container-fluid page-body-wrapper'>\n\t\t\t\t<Sidebar />\n\t\t\t\t<div class='main-panel'>\n\t\t\t\t\t<div class='content-wrapper'>\n\t\t\t\t\t\t<div class='content-wrapper'>\n\t\t\t\t\t\t\t<div class='page-header'>\n\t\t\t\t\t\t\t\t<h3 class='page-title center__title'>\n\t\t\t\t\t\t\t\t\t<span class='page-title-icon bg-gradient-primary text-white mr-2'>\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tpath={mdiClipboardMultiple}\n\t\t\t\t\t\t\t\t\t\t\tclassName='title__icon'\n\t\t\t\t\t\t\t\t\t\t\ttitle='Group'\n\t\t\t\t\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\tGroups\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div class='col-md-6 grid-margin stretch-card'>\n\t\t\t\t\t\t\t\t\t<div class='card'>\n\t\t\t\t\t\t\t\t\t\t<div class='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t<h4 class='card-title'>Add Group</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p class='card-description'></p>\n\t\t\t\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={formSubmitHandler}\n\t\t\t\t\t\t\t\t\t\t\t\tid='addGroupForm'\n\t\t\t\t\t\t\t\t\t\t\t\tclass='forms-sample'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='name'>Group Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Group Name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Group Description</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Group Description'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass='btn btn-gradient-primary mr-2'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button type='reset' class='btn btn-light'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-lg-6 grid-margin stretch-card'>\n\t\t\t\t\t\t\t\t\t<div class='card'>\n\t\t\t\t\t\t\t\t\t\t<div class='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t<h4 class='card-title'>All Groups</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p class='card-description'></p>\n\t\t\t\t\t\t\t\t\t\t\t<table class='table'>\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{groups?.map((group, _i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={_i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{group?.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{group?.description}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(group?.date).format('D MMM YYYY')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Group;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/transaction/Transaction.js",["151","152"],"import React, { useState, useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { selectUser } from './../../features/auth/authSlice';\nimport TransactionService from './../../TransactionService';\nimport GroupService from './../../GroupService';\nimport {\n\tupdateTransactions,\n\tselectTransactions,\n\tupdateGroups,\n} from './../../features/transaction/transactionSlice';\n\n//Import Components\nimport Header from './../header/Header';\nimport Sidebar from './../sidebar/Sidebar';\nimport Icon from '@mdi/react';\nimport { mdiCurrencyUsd } from '@mdi/js';\n\nfunction Transaction() {\n\tconst user = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\tconst transaction = useSelector(selectTransactions);\n\n\tconst deleteEntry = (e) => {\n\t\tTransactionService.deleteTransactions(e).then((data) => {});\n\t};\n\n\tuseEffect(() => {\n\t\tGroupService.listIndividualGroups(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateGroups({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tTransactionService.listIndividualTransactions(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateTransactions({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}, [transaction]);\n\treturn (\n\t\t<div className='container-scroller'>\n\t\t\t<Header />\n\t\t\t<div className='container-fluid page-body-wrapper'>\n\t\t\t\t<Sidebar />\n\t\t\t\t<div className='main-panel'>\n\t\t\t\t\t<div className='content-wrapper'>\n\t\t\t\t\t\t<div className='content-wrapper'>\n\t\t\t\t\t\t\t<div className='page-header'>\n\t\t\t\t\t\t\t\t<h3 className='page-title center__title'>\n\t\t\t\t\t\t\t\t\t<span className='page-title-icon bg-gradient-primary text-white mr-2'>\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tpath={mdiCurrencyUsd}\n\t\t\t\t\t\t\t\t\t\t\tclassName='title__icon'\n\t\t\t\t\t\t\t\t\t\t\ttitle='Dashboard'\n\t\t\t\t\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\tTransactions\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col-lg-12 grid-margin stretch-card'>\n\t\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='card-title'>All Transactions</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p className='card-description'></p>\n\t\t\t\t\t\t\t\t\t\t\t<table className='table'>\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Group</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Amount</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{transaction?.map((entry, _i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={_i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.description}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.group}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CurrencyFormat\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderText={(value) => <td>{value}</td>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={entry?.amount}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayType='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix={'$'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(entry?.date).format('D MMM YYYY')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass='btn btn-inverse-danger btn-fw'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteEntry(entry?._id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Transaction;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/recycle/Recycle.js",["153","154","155"],"import React, { useState, useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { selectUser } from './../../features/auth/authSlice';\nimport TransactionService from './../../TransactionService';\nimport {\n\tupdateDeletedTransactions,\n\tselectDeletedTransactions,\n} from './../../features/transaction/transactionSlice';\n\n//Import Components\nimport Header from './../header/Header';\nimport Sidebar from './../sidebar/Sidebar';\nimport Icon from '@mdi/react';\nimport { mdiDelete } from '@mdi/js';\n\nfunction Recycle() {\n\tconst user = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\tconst deletedTransaction = useSelector(selectDeletedTransactions);\n\tconst [message, setMessage] = useState('');\n\n\tconst restoreEntry = (e) => {\n\t\tTransactionService.restoreTransactions(e).then((data) => {});\n\t};\n\tconst deleteEntry = (e) => {\n\t\tTransactionService.deleteTransactionsPermanently(e).then((data) => {});\n\t};\n\n\tuseEffect(() => {\n\t\tTransactionService.listDeletedTransactions(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateDeletedTransactions({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}, [deletedTransaction]);\n\treturn (\n\t\t<div class='container-scroller'>\n\t\t\t<Header />\n\t\t\t<div class='container-fluid page-body-wrapper'>\n\t\t\t\t<Sidebar />\n\t\t\t\t<div class='main-panel'>\n\t\t\t\t\t<div class='content-wrapper'>\n\t\t\t\t\t\t<div class='content-wrapper'>\n\t\t\t\t\t\t\t<div class='page-header'>\n\t\t\t\t\t\t\t\t<h3 class='page-title center__title'>\n\t\t\t\t\t\t\t\t\t<span class='page-title-icon bg-gradient-primary text-white mr-2'>\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tpath={mdiDelete}\n\t\t\t\t\t\t\t\t\t\t\tclassName='title__icon'\n\t\t\t\t\t\t\t\t\t\t\ttitle='Recycle'\n\t\t\t\t\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\tRecycle\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div class='col-lg-12 grid-margin stretch-card'>\n\t\t\t\t\t\t\t\t\t<div class='card'>\n\t\t\t\t\t\t\t\t\t\t<div class='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t<h4 class='card-title'>Deleted Transactions</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p class='card-description'></p>\n\t\t\t\t\t\t\t\t\t\t\t<table class='table'>\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Group</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Amount</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{deletedTransaction?.map((entry, _i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={_i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.description}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.group}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CurrencyFormat\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderText={(value) => <td>{value}</td>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={entry?.amount}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayType='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix={'$'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(entry?.date).format('D MMM YYYY')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass='btn btn-inverse-success btn-fw'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => restoreEntry(entry?._id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRestore\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass='btn btn-inverse-danger btn-fw mx-1'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteEntry(entry?._id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Recycle;\n","/Users/tkarelia/Desktop/myexpense/client/src/components/addTransaction/AddTransaction.js",["156","157"],"import React, { useState, useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { selectUser } from './../../features/auth/authSlice';\nimport TransactionService from './../../TransactionService';\nimport GroupService from './../../GroupService';\nimport {\n\tupdateTransactions,\n\tselectTransactions,\n\tupdateGroups,\n\tselectGroups,\n} from './../../features/transaction/transactionSlice';\n\n//Import Components\nimport Header from './../header/Header';\nimport Sidebar from './../sidebar/Sidebar';\nimport Icon from '@mdi/react';\nimport { mdiCurrencyUsd } from '@mdi/js';\nimport { Link } from 'react-router-dom';\n\nfunction AddTransaction() {\n\tconst user = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\tconst groups = useSelector(selectGroups);\n\tconst transaction = useSelector(selectTransactions);\n\tconst [message, setMessage] = useState('');\n\tconst [newTransaction, setNewTransaction] = useState({ user_id: user._id });\n\n\tconst onChangeHandler = (e) => {\n\t\tsetNewTransaction({ ...newTransaction, [e.target.name]: e.target.value });\n\t};\n\n\tconst formSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tTransactionService.addTransaction(newTransaction).then((data) => {\n\t\t\tconst { message } = data;\n\t\t\tsetMessage(message);\n\t\t\tresetForm();\n\t\t});\n\t};\n\tconst resetForm = () => {\n\t\tsetNewTransaction({\n\t\t\tname: '',\n\t\t\tdescription: '',\n\t\t\tamount: '',\n\t\t});\n\t\tdocument.getElementById('addTransactionForm').reset();\n\t};\n\n\tuseEffect(() => {\n\t\tGroupService.listIndividualGroups(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateGroups({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tTransactionService.listIndividualTransactions(user._id).then((data) => {\n\t\t\tdispatch(\n\t\t\t\tupdateTransactions({\n\t\t\t\t\tdata,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}, [transaction]);\n\treturn (\n\t\t<div className='container-scroller'>\n\t\t\t<Header />\n\t\t\t<div className='container-fluid page-body-wrapper'>\n\t\t\t\t<Sidebar />\n\t\t\t\t<div className='main-panel'>\n\t\t\t\t\t<div className='content-wrapper'>\n\t\t\t\t\t\t<div className='content-wrapper'>\n\t\t\t\t\t\t\t<div className='page-header'>\n\t\t\t\t\t\t\t\t<h3 class='page-title center__title'>\n\t\t\t\t\t\t\t\t\t<span class='page-title-icon bg-gradient-primary text-white mr-2'>\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tclassName='title__icon'\n\t\t\t\t\t\t\t\t\t\t\tpath={mdiCurrencyUsd}\n\t\t\t\t\t\t\t\t\t\t\ttitle='Transaction'\n\t\t\t\t\t\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\tTransactions\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col-md-6 grid-margin stretch-card'>\n\t\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='card-title'>Add bill</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p className='card-description'></p>\n\t\t\t\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={formSubmitHandler}\n\t\t\t\t\t\t\t\t\t\t\t\tid='addTransactionForm'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='forms-sample'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='name'>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='amount'>Amount</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='amount'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='amount'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Amount'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='group'>Group</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='group'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key='default' value=''>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSelect Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{groups.map((group, _i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={_i} value={group.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{group.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Description</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Description'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-gradient-primary mr-2'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button type='reset' className='btn btn-light'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-lg-6 grid-margin stretch-card'>\n\t\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='card-title'>Latest Transactions</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p className='card-description'></p>\n\t\t\t\t\t\t\t\t\t\t\t<table className='table'>\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Group</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Amount</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{transaction?.map((entry, _i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={_i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.description}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{entry?.group}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CurrencyFormat\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderText={(value) => <td>{value}</td>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={entry?.amount}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayType='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix={'$'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(entry?.date).format('D MMM YYYY')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t<Link className='bottomLink' to='/transaction'>\n\t\t\t\t\t\t\t\t\t\t\t\tCheck all transactions\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default AddTransaction;\n","/Users/tkarelia/Desktop/myexpense/client/src/features/auth/authSlice.js",[],"/Users/tkarelia/Desktop/myexpense/client/src/AuthService.js",["158"],"export default {\n\tlogin: (user) => {\n\t\treturn fetch('/api/user/login', {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify(user),\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t}).then((res) => {\n\t\t\tif (res.status !== 401) {\n\t\t\t\treturn res.json().then((data) => data);\n\t\t\t} else {\n\t\t\t\treturn { isAuthenticated: false, user: { username: '' } };\n\t\t\t}\n\t\t});\n\t},\n\tregister: (user) => {\n\t\treturn fetch('/api/user/register', {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify(user),\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tlogout: () => {\n\t\treturn fetch('/api/user/logout')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tisAuthenticated: () => {\n\t\treturn fetch('/api/user/authenticated').then((res) => {\n\t\t\tif (res.status !== 401) {\n\t\t\t\treturn res.json().then((data) => data);\n\t\t\t} else {\n\t\t\t\treturn { isAuthenticated: false, user: { username: '' } };\n\t\t\t}\n\t\t});\n\t},\n};\n","/Users/tkarelia/Desktop/myexpense/client/src/GroupService.js",["159"],"export default {\n\taddGroup: (group) => {\n\t\treturn fetch('/api/group/addgroup', {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify(group),\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tlistGroups: () => {\n\t\treturn fetch('/api/group/listgroups', {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tlistIndividualGroups: (user_id) => {\n\t\treturn fetch(`/api/group/listgroups/${user_id}`, {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n};\n","/Users/tkarelia/Desktop/myexpense/client/src/features/transaction/transactionSlice.js",[],"/Users/tkarelia/Desktop/myexpense/client/src/TransactionService.js",["160"],"export default {\n\taddTransaction: (transaction) => {\n\t\treturn fetch('/api/transaction/addtransaction', {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify(transaction),\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tlistIndividualTransactions: (user_id) => {\n\t\treturn fetch(`/api/transaction/listtransaction/${user_id}`, {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tlistRecentTransactions: (user_id) => {\n\t\treturn fetch(`/api/transaction/listtrecent/${user_id}`, {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tlistDeletedTransactions: (user_id) => {\n\t\treturn fetch(`/api/transaction/listdeletedtransaction/${user_id}`, {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tdeleteTransactions: (transaction_id) => {\n\t\treturn fetch(`/api/transaction/deletetransaction/${transaction_id}`, {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\trestoreTransactions: (transaction_id) => {\n\t\treturn fetch(`/api/transaction/restoretransaction/${transaction_id}`, {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n\tdeleteTransactionsPermanently: (transaction_id) => {\n\t\treturn fetch(\n\t\t\t`/api/transaction/deletetransactionspermanently/${transaction_id}`,\n\t\t\t{\n\t\t\t\tmethod: 'delete',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => data);\n\t},\n};\n","/Users/tkarelia/Desktop/myexpense/client/src/DashboardService.js",["161"],"/Users/tkarelia/Desktop/myexpense/client/src/components/widgets/topWidget/TopWidgetExpense.js",["162"],"import React from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport Icon from '@mdi/react';\n\n//Import Static Assets\nimport circleImg from './../../../static/img/circle.svg';\n\nfunction TopWidgetExpense({ title, value, icon, cardClass }) {\n\treturn (\n\t\t<div class={cardClass}>\n\t\t\t<div class='card-body'>\n\t\t\t\t<img src={circleImg} class='card-img-absolute' alt='circle-image' />\n\t\t\t\t<h4 class='font-weight-normal mb-3'>\n\t\t\t\t\t{title}\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tclassName='title__icon float-right'\n\t\t\t\t\t\tpath={icon}\n\t\t\t\t\t\ttitle='Chart'\n\t\t\t\t\t\tsize={0.8}\n\t\t\t\t\t/>\n\t\t\t\t</h4>\n\n\t\t\t\t<CurrencyFormat\n\t\t\t\t\trenderText={(value) => <h2 class='mb-5'>{value}</h2>}\n\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdisplayType='text'\n\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\tprefix={'$'}\n\t\t\t\t/>\n\t\t\t\t{/* <h6 class='card-text'>Increased by 60%</h6> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TopWidgetExpense;\n",{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":8,"column":23,"nodeType":"169","messageId":"170","endLine":8,"endColumn":34},{"ruleId":"167","severity":1,"message":"172","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":21},{"ruleId":"167","severity":1,"message":"173","line":14,"column":9,"nodeType":"169","messageId":"170","endLine":14,"endColumn":16},{"ruleId":"174","severity":2,"message":"175","line":9,"column":1,"nodeType":"176","messageId":"177","endLine":9,"endColumn":10},{"ruleId":"167","severity":1,"message":"172","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":21},{"ruleId":"167","severity":1,"message":"171","line":3,"column":23,"nodeType":"169","messageId":"170","endLine":3,"endColumn":34},{"ruleId":"167","severity":1,"message":"178","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"173","line":20,"column":9,"nodeType":"169","messageId":"170","endLine":20,"endColumn":16},{"ruleId":"167","severity":1,"message":"172","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":21},{"ruleId":"167","severity":1,"message":"179","line":11,"column":2,"nodeType":"169","messageId":"170","endLine":11,"endColumn":12},{"ruleId":"167","severity":1,"message":"180","line":12,"column":2,"nodeType":"169","messageId":"170","endLine":12,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":34,"column":3,"nodeType":"183","messageId":"184","endLine":38,"endColumn":4},{"ruleId":"185","severity":1,"message":"186","line":39,"column":5,"nodeType":"187","endLine":39,"endColumn":11,"suggestions":"188"},{"ruleId":"167","severity":1,"message":"189","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":13,"column":5,"nodeType":"192","endLine":13,"endColumn":73},{"ruleId":"167","severity":1,"message":"193","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"185","severity":1,"message":"194","line":24,"column":5,"nodeType":"187","endLine":24,"endColumn":7,"suggestions":"195"},{"ruleId":"185","severity":1,"message":"196","line":25,"column":5,"nodeType":"187","endLine":25,"endColumn":7,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":29,"column":23,"nodeType":"200","messageId":"201","endLine":32,"endColumn":5},{"ruleId":"185","severity":1,"message":"202","line":26,"column":5,"nodeType":"187","endLine":26,"endColumn":18,"suggestions":"203"},{"ruleId":"167","severity":1,"message":"180","line":10,"column":2,"nodeType":"169","messageId":"170","endLine":10,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":32,"column":3,"nodeType":"183","messageId":"184","endLine":36,"endColumn":4},{"ruleId":"181","severity":1,"message":"182","line":40,"column":3,"nodeType":"183","messageId":"184","endLine":44,"endColumn":4},{"ruleId":"167","severity":1,"message":"173","line":21,"column":9,"nodeType":"169","messageId":"170","endLine":21,"endColumn":16},{"ruleId":"185","severity":1,"message":"202","line":51,"column":5,"nodeType":"187","endLine":51,"endColumn":13,"suggestions":"204"},{"ruleId":"167","severity":1,"message":"205","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"202","line":44,"column":5,"nodeType":"187","endLine":44,"endColumn":18,"suggestions":"206"},{"ruleId":"167","severity":1,"message":"173","line":22,"column":9,"nodeType":"169","messageId":"170","endLine":22,"endColumn":16},{"ruleId":"167","severity":1,"message":"207","line":22,"column":18,"nodeType":"169","messageId":"170","endLine":22,"endColumn":28},{"ruleId":"185","severity":1,"message":"202","line":39,"column":5,"nodeType":"187","endLine":39,"endColumn":25,"suggestions":"208"},{"ruleId":"167","severity":1,"message":"173","line":27,"column":9,"nodeType":"169","messageId":"170","endLine":27,"endColumn":16},{"ruleId":"185","severity":1,"message":"202","line":66,"column":5,"nodeType":"187","endLine":66,"endColumn":18,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":1,"nodeType":"212","endLine":42,"endColumn":3},{"ruleId":"210","severity":1,"message":"211","line":1,"column":1,"nodeType":"212","endLine":33,"endColumn":3},{"ruleId":"210","severity":1,"message":"211","line":1,"column":1,"nodeType":"212","endLine":76,"endColumn":3},{"ruleId":"210","severity":1,"message":"211","line":1,"column":1,"nodeType":"212","endLine":62,"endColumn":3},{"ruleId":"190","severity":1,"message":"191","line":12,"column":5,"nodeType":"192","endLine":12,"endColumn":73},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'message' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'register' is defined but never used.","'selectUser' is defined but never used.","'selectIsAuthenticated' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'totalExpense'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'mdiChartLine' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Doughnut' is defined but never used.","React Hook useEffect has missing dependencies: 'sorter' and 'user._id'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["217"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'randomColor'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has missing dependencies: 'dispatch' and 'user._id'. Either include them or remove the dependency array.",["218"],["219"],"'useState' is defined but never used.",["220"],"'setMessage' is assigned a value but never used.",["221"],["222"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"229","fix":"233"},{"desc":"234","fix":"235"},{"desc":"229","fix":"236"},"Update the dependencies array to be: [totalExpense, user]",{"range":"237","text":"238"},"Update the dependencies array to be: [sorter, user._id]",{"range":"239","text":"240"},"Update the dependencies array to be: [user._id]",{"range":"241","text":"242"},"Update the dependencies array to be: [dispatch, transaction, user._id]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, groups, user._id]",{"range":"245","text":"246"},{"range":"247","text":"244"},"Update the dependencies array to be: [deletedTransaction, dispatch, user._id]",{"range":"248","text":"249"},{"range":"250","text":"244"},[1437,1443],"[totalExpense, user]",[827,829],"[sorter, user._id]",[795,797],"[user._id]",[784,797],"[dispatch, transaction, user._id]",[1352,1360],"[dispatch, groups, user._id]",[1204,1217],[1193,1213],"[deletedTransaction, dispatch, user._id]",[1818,1831]]